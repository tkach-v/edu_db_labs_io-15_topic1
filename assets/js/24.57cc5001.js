(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{705:function(e,n,s){"use strict";s.r(n);var t=s(47),o=Object(t.a)({},(function(){var e=this.$createElement,n=this._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("<?php\n\nrequire '../vendor/autoload.php';\n\nuse Slim\\Factory\\AppFactory;\nuse Psr\\Http\\Message\\ResponseInterface as Response;\nuse Psr\\Http\\Message\\ServerRequestInterface as Request;\n\nclass UserController\n{\n    private $connection;\n\n    public function __construct($connection)\n    {\n        $this->connection = $connection;\n    }\n\n    public function getAllUsers(Request $request, Response $response)\n    {\n        $sql = \"SELECT * FROM `users`\";\n        $result = mysqli_query($this->connection, $sql);\n        $data = [];\n        while ($row = mysqli_fetch_assoc($result)) {\n            $data[] = $row;\n        }\n\n        mysqli_close($this->connection);\n\n        $response->getBody()->write(json_encode($data));\n        return $response->withHeader('Content-Type', 'application/json');\n    }\n\n    public function getUserById(Request $request, Response $response, $args)\n    {\n        $name = $args['user_id'];\n        $sql = \"SELECT * FROM `users` WHERE `username`='$name'\";\n        $result = mysqli_query($this->connection, $sql);\n\n        mysqli_close($this->connection);\n\n        $user = mysqli_fetch_assoc($result);\n\n        if ($user === null) {\n            $response->getBody()->write(json_encode(['message' => 'User not found']));\n        } else {\n            $response->getBody()->write(json_encode($user));\n        }\n\n        return $response->withHeader('Content-Type', 'application/json');\n    }\n\n    public function addUser(Request $request, Response $response)\n    {\n        $data = $request->getParsedBody();\n\n        $email = $data['email'];\n        $password = $data['password'];\n        $username = $data['username'];\n\n        $sql = \"INSERT INTO `users` (`id`, `email`, `password`, `username`) VALUES (NULL, '$email', '$password','$username')\";\n        $result = mysqli_query($this->connection, $sql);\n\n        mysqli_close($this->connection);\n\n        if ($result) {\n            $response->getBody()->write(json_encode(['message' => 'User created']));\n        } else {\n            $response->getBody()->write(json_encode(['message' => 'Failed to create user']));\n        }\n\n        return $response->withHeader('Content-Type', 'application/json');\n    }\n\n    public function deleteUser(Request $request, Response $response, $args)\n    {\n        $user_id = (int) $args['user_id'];\n        $sql = \"DELETE FROM `users` WHERE `id`='$user_id'\";\n        $result = mysqli_query($this->connection, $sql);\n\n        mysqli_close($this->connection);\n\n        if ($result) {\n            $response->getBody()->write(json_encode(['message' => 'User deleted']));\n        } else {\n            $response->getBody()->write(json_encode(['message' => 'Failed to delete user']));\n        }\n\n        return $response->withHeader('Content-Type', 'application/json');\n    }\n}\n\nclass QuizController\n{\n    private $connection;\n\n    public function __construct($connection)\n    {\n        $this->connection = $connection;\n    }\n\n    public function getQuizById(Request $request, Response $response, $args)\n    {\n        $quiz_id = (int) $args['quiz_id'];\n        $sql = \"SELECT * FROM `quiz` WHERE `id`='$quiz_id'\";\n        $result = mysqli_query($this->connection, $sql);\n\n        mysqli_close($this->connection);\n\n        if (mysqli_num_rows($result) === 0) {\n            $response->getBody()->write(json_encode(['message' => 'Quiz not found']));\n        } else {\n            $quiz = mysqli_fetch_assoc($result);\n            $response->getBody()->write(json_encode($quiz));\n        }\n\n        return $response->withHeader('Content-Type', 'application/json');\n    }\n\n    public function getAllQuizzes(Request $request, Response $response)\n    {\n        $sql = \"SELECT * FROM `quiz`\";\n        $result = mysqli_query($this->connection, $sql);\n        $data = [];\n        while ($row = mysqli_fetch_assoc($result)) {\n            $data[] = $row;\n        }\n        mysqli_close($this->connection);\n\n        $response->getBody()->write(json_encode($data));\n        return $response->withHeader('Content-Type', 'application/json');\n    }\n\n    public function addQuiz(Request $request, Response $response)  \n    {\n        $data = $request->getParsedBody();\n\n        $title = $data['title'];\n        $description = $data['description'];\n        $datetime = $data['datetime'];\n\n        $sql = \"INSERT INTO `quiz` (`id`, `title`, `description`, `datetime`) VALUES (NULL, '$title', '$description', '$datetime')\";\n        $result = mysqli_query($this->connection, $sql);\n\n        mysqli_close($this->connection);\n\n        if ($result) {\n            $response->getBody()->write(json_encode(['message' => 'Quiz created']));\n        } else {\n            $response->getBody()->write(json_encode(['message' => 'Failed to create quiz']));\n        }\n\n        return $response->withHeader('Content-Type', 'application/json');\n    }\n\n    public function deleteQuiz(Request $request, Response $response, $args)\n    {\n        $quiz_id = (int) $args['quiz_id'];\n        $sql = \"DELETE FROM `quiz` WHERE `id`='$quiz_id'\";\n        $result = mysqli_query($this->connection, $sql);\n\n        mysqli_close($this->connection);\n\n        if ($result) {\n            $response->getBody()->write(json_encode(['message' => 'Quiz deleted']));\n        } else {\n            $response->getBody()->write(json_encode(['message' => 'Failed to delete quiz']));\n        }\n\n        return $response->withHeader('Content-Type', 'application/json');\n    }\n}\n\nclass QuestionController\n{\n    private $connection;\n\n    public function __construct($connection)\n    {\n        $this->connection = $connection;\n    }\n\n    public function getQuestionsByQuiz(Request $request, Response $response, $args)\n    {\n        $quiz_id = (int) $args['quiz_id'];\n        $sql = \"SELECT question FROM `question` WHERE `quiz_id`='$quiz_id'\";\n        $result = mysqli_query($this->connection, $sql);\n        \n        mysqli_close($this->connection);\n        \n        $questions = [];\n        while ($row = mysqli_fetch_assoc($result)) {\n            $questions[] = $row['question'];\n        }\n        \n        $response->getBody()->write(json_encode($questions));\n        return $response->withHeader('Content-Type', 'application/json');\n    }\n}\n\n$connection = mysqli_connect('127.0.0.1', 'root', '', 'mydb');\n\n$app = AppFactory::create();\n\n$userController = new UserController($connection);\n$quizController = new QuizController($connection);\n$questionController = new QuestionController($connection);\n\n$app->get('/src/allusers', [$userController, 'getAllUsers']);\n$app->get('/src/user/{user_id}', [$userController, 'getUserById']);\n$app->post('/src/adduser', [$userController, 'addUser']);\n$app->delete('/src/user/{user_id}', [$userController, 'deleteUser']);\n\n$app->get('/src/allquizzes', [$quizController, 'getAllQuizzes']);\n$app->get('/src/quiz/{quiz_id}', [$quizController, 'getQuizById']);\n$app->post('/src/addquiz', [$quizController, 'addQuiz']);\n$app->delete('/src/quiz/{quiz_id}', [$quizController, 'deleteQuiz']);\n\n$app->get('/src/questions/{quiz_id}', [$questionController, 'getQuestionsByQuiz']);\n\n$app->run();\n")])])])])}),[],!1,null,null,null);n.default=o.exports}}]);